// smart_fix_user_types.js (wersja 2 - synchronizujƒÖca)
const db = require('./firestore'); // Upewnij siƒô, ≈ºe ≈õcie≈ºka do inicjalizacji Firestore jest poprawna

async function syncUserRoles() {
    console.log('ü§ñ Rozpoczynam pe≈ÇnƒÖ synchronizacjƒô r√≥l u≈ºytkownik√≥w...');

    // --- Krok 1: Znajd≈∫ ID wszystkich w≈Ça≈õcicieli food truck√≥w ---
    console.log('1/3: Pobieranie listy w≈Ça≈õcicieli z kolekcji "foodTrucks"...');
    const foodTrucksSnap = await db.collection('foodTrucks').get();
    const ownerIds = new Set();
    
    foodTrucksSnap.forEach(doc => {
        const ownerId = doc.data().owner_id;
        if (ownerId) {
            ownerIds.add(ownerId);
        }
    });

    console.log(`Znaleziono ${ownerIds.size} unikalnych w≈Ça≈õcicieli food truck√≥w.`);

    // --- Krok 2: Przejd≈∫ przez wszystkich u≈ºytkownik√≥w i zweryfikuj ich role ---
    console.log('2/3: Pobieranie wszystkich u≈ºytkownik√≥w do weryfikacji...');
    const usersSnap = await db.collection('users').get();
    
    if (usersSnap.empty) {
        console.log('Nie znaleziono ≈ºadnych u≈ºytkownik√≥w. Ko≈Ñczƒô pracƒô.');
        return;
    }

    const updates = [];
    let updatedCount = 0;

    usersSnap.forEach(doc => {
        const userData = doc.data();
        const userId = userData.user_id;
        const currentType = userData.user_type;

        // Okre≈õl, jaka powinna byƒá prawid≈Çowa rola tego u≈ºytkownika
        const correctType = ownerIds.has(userId) ? 'food_truck_owner' : 'organizer';

        //  <<<<< KLUCZOWA ZMIANA LOGIKI  >>>>>
        // Zaktualizuj tylko, je≈õli obecna rola jest inna ni≈º prawid≈Çowa
        if (currentType !== correctType) {
            console.log(`-> Niezgodno≈õƒá! U≈ºytkownik ID ${userId} (${userData.email}) ma rolƒô "${currentType}", a powinien mieƒá "${correctType}". Poprawiam...`);
            
            const updatePromise = doc.ref.update({ user_type: correctType });
            updates.push(updatePromise);
            updatedCount++;
        }
    });

    if (updates.length === 0) {
        console.log('Wszyscy u≈ºytkownicy majƒÖ ju≈º prawid≈Çowe role. Nic do zrobienia.');
        return;
    }

    // --- Krok 3: Zapisz wszystkie zmiany w bazie danych ---
    console.log(`\n3/3: Aktualizowanie ${updatedCount} u≈ºytkownik√≥w w bazie danych...`);
    await Promise.all(updates);
    console.log('Synchronizacja r√≥l zako≈Ñczona pomy≈õlnie! ‚úÖ');
}

syncUserRoles().catch(console.error);